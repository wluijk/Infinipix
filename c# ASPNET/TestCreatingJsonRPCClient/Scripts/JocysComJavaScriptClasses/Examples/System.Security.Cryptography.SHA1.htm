<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<meta http-equiv="Pragma" content="no-cache" />
	<meta http-equiv="Expires" content="-1" />
	<title>System.Security.Cryptography.SHA1</title>

    <link type="text/css" rel="stylesheet" href="../System.Web.UI.Interface.debug.css" />

	<script type="text/javascript" src="../System.debug.js"></script>

	<script type="text/javascript" src="../System.BitConverter.debug.js"></script>

	<script type="text/javascript" src="../System.Text.debug.js"></script>

	<script type="text/javascript" src="../System.Convert.debug.js"></script>

	<script type="text/javascript" src="../System.Security.Cryptography.debug.js"></script>

	<script type="text/javascript" src="../System.Security.Cryptography.RC2.debug.js"></script>

	<script type="text/javascript" src="../System.Security.Cryptography.SHA1.debug.js"></script>

	<script type="text/javascript" src="../System.Security.Cryptography.HMACSHA1.debug.js"></script>

	<script type="text/javascript">

		// You can remove Trace.Write lines.
		// Note: 'byte' is number from 0 to 256;
		// Note: 'bytes' is array of 'bytes'. It is same as bytes[] in C#
		window.onload = function() {
			Trace.IsEnabled = true;
			Trace.Write("Start Demo");
			Trace.Write("// Test PKCS1 mask generation method.")
			var mgf = new System.Security.Cryptography.PKCS1MaskGenerationMethod();
			var mask = mgf.GenerateMask(new System.Byte(0), 40);
			Trace.Write("mfg.GenerateMask(new System.Byte(0), 40) = " + System.BitConverter.ToString(mask,""));
			// Define key and data string.
			var k = "test key";
			var s = "Encoding-编码-암호화-表現形式";
			var kb = System.Text.Encoding.UTF8.GetBytes(k);
			var sb = System.Text.Encoding.UTF8.GetBytes(s);
			// Test SHA1.
			Trace.Write("// Create SHA1 Algorithm. Expected HEX: BAF9B4150025B2225DFBB05143F0554B1493C645");
			var sha1 = new System.Security.Cryptography.SHA1CryptoServiceProvider();
			var hash = System.BitConverter.ToString(sha1.ComputeHash(sb), "");
			Trace.Write("sha1.ComputeHash('" + s + "') = " + hash);
			// Test HMAC-SHA1.
			Trace.Write("// Create HMAC-SHA1 Algorithm. Expected HEX: 22FB8BF61E0FE27BCE79B5F7F896C1593DB17C7F");
			var hmac = new System.Security.Cryptography.HMACSHA1(kb);
			hash = System.BitConverter.ToString(hmac.ComputeHash(sb), "");
			Trace.Write("hmac.ComputeHash('" + k + "','" + s + "') = " + hash);
		}

	</script>

</head>
<body>
	<div id="TraceLog" style="width: 100%; height: 200px;"></div>
</body>
</html>
